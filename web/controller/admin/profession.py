from web.controller.admin import route_adminfrom common.libs.WebHelper import ops_renderfrom common.model.data import datafrom common.model.classify import classifyfrom common.libs.UrlManager import UrlManagerfrom flask import request, jsonifyfrom application import db, appimport os@route_admin.route('/profession', methods=['GET', 'POST'])def profession_index():    resp = {'code': 200, 'info': {}}    req = request.values    #    if request.method == 'GET':        try:            id = req['id']            info = data.query.filter_by(id=id).first()            resp['info'] = {                'id': id,                'title': info.title,                'f0': info.f0_desc,                'f1': info.f1_desc,                'f2': info.f2_desc,                'time': info.time,                "url": info.url,                "image": info.image,                "content": info.content,                "content_url": info.content_url,                "Introduction": info.Introduction,                "content_title": info.content_title            }            return ops_render('/admin/profession.html', resp)        except:            return ops_render('/admin/profession.html', resp)@route_admin.route('/update', methods=['GET', 'POST'])def update():    resp = {'code': 200, 'totalCount': 0, 'pageTotal': 0, 'list': {}, 'curPage': 1}    if request.method == 'POST':        id = request.form['id']        if id!= '':            f0 = request.form['f0']            f1 = request.form['f1']            f2 = request.form['f2']            title = request.form['title'] if 'title' in request.form else '空'            content = request.form['content'] if 'content' in request.form else '空'            time = request.form['time'] if 'time' in request.form else '空'            content_url = request.form['content_url'] if 'content_url' in request.form else '空'            url = request.form['url'] if 'url' in request.form else '空'            Introduction = request.form['Introduction'] if 'Introduction' in request.form else '空'            content_title = request.form['content_title'] if 'content_title' in request.form else '空'            type = 1            if content_url=='空' or content_url == '':                type = 0            if f0 != '/':                get_f0 = classify.query.filter_by(name=f0).first().did            else:                get_f0 = -1            if f1 !='/':                get_f1 = classify.query.filter_by(name=f1).first().did            else:                get_f1 = -1            if f2 != '/':                get_f2 = classify.query.filter_by(name=f2).first().did            else:                get_f2 = -1            update_info = data.query.filter_by(id=id).first()            update_info.title = title            update_info.f0 = get_f0            update_info.f1 = get_f1            update_info.f2 = get_f2            update_info.time = time            update_info.url = url            update_info.content = content            update_info.content_url = content_url            update_info.Introduction = Introduction            update_info.content_title = content_title            update_info.type = type            try:                image = request.files['image']                file_path = os.path.join('Images/', image.filename)                save_path = os.path.join(app.config["ABS_UPLOAD_FOLDER"], image.filename)                image.save(save_path)                update_info.image = file_path                db.session.commit()                resp['msg'] = '操作成功'                return jsonify(resp)            except:                db.session.commit()                resp['msg'] = '操作成功'                return jsonify(resp)        else:            f0 = request.form['f0']            f1 = request.form['f1']            f2 = request.form['f2']            title = request.form['title'] if 'title' in request.form else '空'            content = request.form['content'] if 'content' in request.form else '空'            time = request.form['time'] if 'time' in request.form else '空'            content_url = request.form['content_url'] if 'content_url' in request.form else '空'            url = request.form['url'] if 'url' in request.form else '空'            Introduction = request.form['Introduction'] if 'Introduction' in request.form else '空'            content_title = request.form['content_title'] if 'image' in request.form else '空'            type = 1            if content_url == '空' or content_url == '':                type = 0            if f0 != '/':                get_f0 = classify.query.filter_by(name=f0).first().did            else:                get_f0 = -1            if f1 !='/':                get_f1 = classify.query.filter_by(name=f1).first().did            else:                get_f1 = -1            if f2 != '/':                get_f2 = classify.query.filter_by(name=f2).first().did            else:                get_f2 = -1            try:                image = request.files['image']                file_path = os.path.join('Images/', image.filename)                save_path = os.path.join(app.config["ABS_UPLOAD_FOLDER"], image.filename)                image.save(save_path)                image = file_path                add_info = data(f0=get_f0, f1=get_f1, f2=get_f2, title=title, time=time, content=content,                                content_url=content_url, url=url, Introduction=Introduction, image=image,                                content_title=content_title, type=type)                db.session.add(add_info)                db.session.commit()                resp['msg'] = '操作成功'                return jsonify(resp)            except:                add_info = data(f0=get_f0, f1=get_f1, f2=get_f2, title=title, time=time, content=content,                                content_url=content_url, url=url, Introduction=Introduction, content_title=content_title, type=type)                db.session.add(add_info)                db.session.commit()                resp['msg'] = '操作成功'            return jsonify(resp)@route_admin.route('/upload_img/', methods=['POST'])def summernote_image():    response = {'status':1, 'message':'文件上传成功'}    image = request.files['file']    file_path = os.path.join('Images/', image.filename)    save_path = os.path.join(app.config["ABS_UPLOAD_FOLDER"], image.filename)    image.save(save_path)    result = UrlManager.buildImageUrl(file_path)    response['img'] = result    return jsonify(response)